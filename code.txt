import json

def handle(event, context):
    """
    The function handler is passed two arguments, event and context.
    event contains data about the request, including:
    - body(in bytes, see example below)
    - headers
    - method
    - query
    - path

    context contains basic information about the function, including:
    - hostname

    By default, the template will automatically attempt to
    set the correct Content-Type header for you based on the type of response.
    For example, returning a dict object type will automatically attach
    the header Content-Type: application/json and returning a string type will
    automatically attach the Content-Type: text/html, charset=utf-8 for you.

    Example codes : 

        - Accessing request body (you can also use json.loads(event.body) to convert into dict)
            def handle(event, context):
            return {
                "statusCode": 200,
                "body": "You said: " + str(event.body)
            }


        - Accessing request method
            def handle(event, context):
                if event.method == 'GET':
                    return {
                        "statusCode": 200,
                        "body": "GET request"
                    }
                else:
                    return {
                        "statusCode": 405,
                        "body": "Method not allowed"
                    }
    
        - Accessing request query string arguments
            def handle(event, context):
                return {
                    "statusCode": 200,
                    "body": {
                        "name": event.query['name']
                    }
                }
        - Setting custom response headers
            def handle(event, context):
                return {
                    "statusCode": 200,
                    "body": {
                        "key": "value"
                    },
                    "headers": {
                        "Location": "https://www.example.com/"
                    }
                }
    """
    return {
        "statusCode": 200,
        "body": "Hello from E2E Networks 123qwertyu!"
    }